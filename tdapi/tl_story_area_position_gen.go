// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// StoryAreaPosition represents TL type `storyAreaPosition#6389679`.
type StoryAreaPosition struct {
	// The abscissa of the rectangle's center, as a percentage of the media width
	XPercentage float64
	// The ordinate of the rectangle's center, as a percentage of the media height
	YPercentage float64
	// The width of the rectangle, as a percentage of the media width
	WidthPercentage float64
	// The height of the rectangle, as a percentage of the media height
	HeightPercentage float64
	// Clockwise rotation angle of the rectangle, in degrees; 0-360
	RotationAngle float64
}

// StoryAreaPositionTypeID is TL type id of StoryAreaPosition.
const StoryAreaPositionTypeID = 0x6389679

// Ensuring interfaces in compile-time for StoryAreaPosition.
var (
	_ bin.Encoder     = &StoryAreaPosition{}
	_ bin.Decoder     = &StoryAreaPosition{}
	_ bin.BareEncoder = &StoryAreaPosition{}
	_ bin.BareDecoder = &StoryAreaPosition{}
)

func (s *StoryAreaPosition) Zero() bool {
	if s == nil {
		return true
	}
	if !(s.XPercentage == 0) {
		return false
	}
	if !(s.YPercentage == 0) {
		return false
	}
	if !(s.WidthPercentage == 0) {
		return false
	}
	if !(s.HeightPercentage == 0) {
		return false
	}
	if !(s.RotationAngle == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (s *StoryAreaPosition) String() string {
	if s == nil {
		return "StoryAreaPosition(nil)"
	}
	type Alias StoryAreaPosition
	return fmt.Sprintf("StoryAreaPosition%+v", Alias(*s))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*StoryAreaPosition) TypeID() uint32 {
	return StoryAreaPositionTypeID
}

// TypeName returns name of type in TL schema.
func (*StoryAreaPosition) TypeName() string {
	return "storyAreaPosition"
}

// TypeInfo returns info about TL type.
func (s *StoryAreaPosition) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "storyAreaPosition",
		ID:   StoryAreaPositionTypeID,
	}
	if s == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "XPercentage",
			SchemaName: "x_percentage",
		},
		{
			Name:       "YPercentage",
			SchemaName: "y_percentage",
		},
		{
			Name:       "WidthPercentage",
			SchemaName: "width_percentage",
		},
		{
			Name:       "HeightPercentage",
			SchemaName: "height_percentage",
		},
		{
			Name:       "RotationAngle",
			SchemaName: "rotation_angle",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (s *StoryAreaPosition) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode storyAreaPosition#6389679 as nil")
	}
	b.PutID(StoryAreaPositionTypeID)
	return s.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (s *StoryAreaPosition) EncodeBare(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode storyAreaPosition#6389679 as nil")
	}
	b.PutDouble(s.XPercentage)
	b.PutDouble(s.YPercentage)
	b.PutDouble(s.WidthPercentage)
	b.PutDouble(s.HeightPercentage)
	b.PutDouble(s.RotationAngle)
	return nil
}

// Decode implements bin.Decoder.
func (s *StoryAreaPosition) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode storyAreaPosition#6389679 to nil")
	}
	if err := b.ConsumeID(StoryAreaPositionTypeID); err != nil {
		return fmt.Errorf("unable to decode storyAreaPosition#6389679: %w", err)
	}
	return s.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (s *StoryAreaPosition) DecodeBare(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode storyAreaPosition#6389679 to nil")
	}
	{
		value, err := b.Double()
		if err != nil {
			return fmt.Errorf("unable to decode storyAreaPosition#6389679: field x_percentage: %w", err)
		}
		s.XPercentage = value
	}
	{
		value, err := b.Double()
		if err != nil {
			return fmt.Errorf("unable to decode storyAreaPosition#6389679: field y_percentage: %w", err)
		}
		s.YPercentage = value
	}
	{
		value, err := b.Double()
		if err != nil {
			return fmt.Errorf("unable to decode storyAreaPosition#6389679: field width_percentage: %w", err)
		}
		s.WidthPercentage = value
	}
	{
		value, err := b.Double()
		if err != nil {
			return fmt.Errorf("unable to decode storyAreaPosition#6389679: field height_percentage: %w", err)
		}
		s.HeightPercentage = value
	}
	{
		value, err := b.Double()
		if err != nil {
			return fmt.Errorf("unable to decode storyAreaPosition#6389679: field rotation_angle: %w", err)
		}
		s.RotationAngle = value
	}
	return nil
}

// EncodeTDLibJSON implements tdjson.TDLibEncoder.
func (s *StoryAreaPosition) EncodeTDLibJSON(b tdjson.Encoder) error {
	if s == nil {
		return fmt.Errorf("can't encode storyAreaPosition#6389679 as nil")
	}
	b.ObjStart()
	b.PutID("storyAreaPosition")
	b.Comma()
	b.FieldStart("x_percentage")
	b.PutDouble(s.XPercentage)
	b.Comma()
	b.FieldStart("y_percentage")
	b.PutDouble(s.YPercentage)
	b.Comma()
	b.FieldStart("width_percentage")
	b.PutDouble(s.WidthPercentage)
	b.Comma()
	b.FieldStart("height_percentage")
	b.PutDouble(s.HeightPercentage)
	b.Comma()
	b.FieldStart("rotation_angle")
	b.PutDouble(s.RotationAngle)
	b.Comma()
	b.StripComma()
	b.ObjEnd()
	return nil
}

// DecodeTDLibJSON implements tdjson.TDLibDecoder.
func (s *StoryAreaPosition) DecodeTDLibJSON(b tdjson.Decoder) error {
	if s == nil {
		return fmt.Errorf("can't decode storyAreaPosition#6389679 to nil")
	}

	return b.Obj(func(b tdjson.Decoder, key []byte) error {
		switch string(key) {
		case tdjson.TypeField:
			if err := b.ConsumeID("storyAreaPosition"); err != nil {
				return fmt.Errorf("unable to decode storyAreaPosition#6389679: %w", err)
			}
		case "x_percentage":
			value, err := b.Double()
			if err != nil {
				return fmt.Errorf("unable to decode storyAreaPosition#6389679: field x_percentage: %w", err)
			}
			s.XPercentage = value
		case "y_percentage":
			value, err := b.Double()
			if err != nil {
				return fmt.Errorf("unable to decode storyAreaPosition#6389679: field y_percentage: %w", err)
			}
			s.YPercentage = value
		case "width_percentage":
			value, err := b.Double()
			if err != nil {
				return fmt.Errorf("unable to decode storyAreaPosition#6389679: field width_percentage: %w", err)
			}
			s.WidthPercentage = value
		case "height_percentage":
			value, err := b.Double()
			if err != nil {
				return fmt.Errorf("unable to decode storyAreaPosition#6389679: field height_percentage: %w", err)
			}
			s.HeightPercentage = value
		case "rotation_angle":
			value, err := b.Double()
			if err != nil {
				return fmt.Errorf("unable to decode storyAreaPosition#6389679: field rotation_angle: %w", err)
			}
			s.RotationAngle = value
		default:
			return b.Skip()
		}
		return nil
	})
}

// GetXPercentage returns value of XPercentage field.
func (s *StoryAreaPosition) GetXPercentage() (value float64) {
	if s == nil {
		return
	}
	return s.XPercentage
}

// GetYPercentage returns value of YPercentage field.
func (s *StoryAreaPosition) GetYPercentage() (value float64) {
	if s == nil {
		return
	}
	return s.YPercentage
}

// GetWidthPercentage returns value of WidthPercentage field.
func (s *StoryAreaPosition) GetWidthPercentage() (value float64) {
	if s == nil {
		return
	}
	return s.WidthPercentage
}

// GetHeightPercentage returns value of HeightPercentage field.
func (s *StoryAreaPosition) GetHeightPercentage() (value float64) {
	if s == nil {
		return
	}
	return s.HeightPercentage
}

// GetRotationAngle returns value of RotationAngle field.
func (s *StoryAreaPosition) GetRotationAngle() (value float64) {
	if s == nil {
		return
	}
	return s.RotationAngle
}
