// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// ToggleGroupCallEnabledStartNotificationRequest represents TL type `toggleGroupCallEnabledStartNotification#2a30c752`.
type ToggleGroupCallEnabledStartNotificationRequest struct {
	// Group call identifier
	GroupCallID int32
	// New value of the enabled_start_notification setting
	EnabledStartNotification bool
}

// ToggleGroupCallEnabledStartNotificationRequestTypeID is TL type id of ToggleGroupCallEnabledStartNotificationRequest.
const ToggleGroupCallEnabledStartNotificationRequestTypeID = 0x2a30c752

// Ensuring interfaces in compile-time for ToggleGroupCallEnabledStartNotificationRequest.
var (
	_ bin.Encoder     = &ToggleGroupCallEnabledStartNotificationRequest{}
	_ bin.Decoder     = &ToggleGroupCallEnabledStartNotificationRequest{}
	_ bin.BareEncoder = &ToggleGroupCallEnabledStartNotificationRequest{}
	_ bin.BareDecoder = &ToggleGroupCallEnabledStartNotificationRequest{}
)

func (t *ToggleGroupCallEnabledStartNotificationRequest) Zero() bool {
	if t == nil {
		return true
	}
	if !(t.GroupCallID == 0) {
		return false
	}
	if !(t.EnabledStartNotification == false) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (t *ToggleGroupCallEnabledStartNotificationRequest) String() string {
	if t == nil {
		return "ToggleGroupCallEnabledStartNotificationRequest(nil)"
	}
	type Alias ToggleGroupCallEnabledStartNotificationRequest
	return fmt.Sprintf("ToggleGroupCallEnabledStartNotificationRequest%+v", Alias(*t))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*ToggleGroupCallEnabledStartNotificationRequest) TypeID() uint32 {
	return ToggleGroupCallEnabledStartNotificationRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*ToggleGroupCallEnabledStartNotificationRequest) TypeName() string {
	return "toggleGroupCallEnabledStartNotification"
}

// TypeInfo returns info about TL type.
func (t *ToggleGroupCallEnabledStartNotificationRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "toggleGroupCallEnabledStartNotification",
		ID:   ToggleGroupCallEnabledStartNotificationRequestTypeID,
	}
	if t == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "GroupCallID",
			SchemaName: "group_call_id",
		},
		{
			Name:       "EnabledStartNotification",
			SchemaName: "enabled_start_notification",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (t *ToggleGroupCallEnabledStartNotificationRequest) Encode(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't encode toggleGroupCallEnabledStartNotification#2a30c752 as nil")
	}
	b.PutID(ToggleGroupCallEnabledStartNotificationRequestTypeID)
	return t.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (t *ToggleGroupCallEnabledStartNotificationRequest) EncodeBare(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't encode toggleGroupCallEnabledStartNotification#2a30c752 as nil")
	}
	b.PutInt32(t.GroupCallID)
	b.PutBool(t.EnabledStartNotification)
	return nil
}

// Decode implements bin.Decoder.
func (t *ToggleGroupCallEnabledStartNotificationRequest) Decode(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't decode toggleGroupCallEnabledStartNotification#2a30c752 to nil")
	}
	if err := b.ConsumeID(ToggleGroupCallEnabledStartNotificationRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode toggleGroupCallEnabledStartNotification#2a30c752: %w", err)
	}
	return t.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (t *ToggleGroupCallEnabledStartNotificationRequest) DecodeBare(b *bin.Buffer) error {
	if t == nil {
		return fmt.Errorf("can't decode toggleGroupCallEnabledStartNotification#2a30c752 to nil")
	}
	{
		value, err := b.Int32()
		if err != nil {
			return fmt.Errorf("unable to decode toggleGroupCallEnabledStartNotification#2a30c752: field group_call_id: %w", err)
		}
		t.GroupCallID = value
	}
	{
		value, err := b.Bool()
		if err != nil {
			return fmt.Errorf("unable to decode toggleGroupCallEnabledStartNotification#2a30c752: field enabled_start_notification: %w", err)
		}
		t.EnabledStartNotification = value
	}
	return nil
}

// EncodeTDLibJSON implements tdjson.TDLibEncoder.
func (t *ToggleGroupCallEnabledStartNotificationRequest) EncodeTDLibJSON(b tdjson.Encoder) error {
	if t == nil {
		return fmt.Errorf("can't encode toggleGroupCallEnabledStartNotification#2a30c752 as nil")
	}
	b.ObjStart()
	b.PutID("toggleGroupCallEnabledStartNotification")
	b.Comma()
	b.FieldStart("group_call_id")
	b.PutInt32(t.GroupCallID)
	b.Comma()
	b.FieldStart("enabled_start_notification")
	b.PutBool(t.EnabledStartNotification)
	b.Comma()
	b.StripComma()
	b.ObjEnd()
	return nil
}

// DecodeTDLibJSON implements tdjson.TDLibDecoder.
func (t *ToggleGroupCallEnabledStartNotificationRequest) DecodeTDLibJSON(b tdjson.Decoder) error {
	if t == nil {
		return fmt.Errorf("can't decode toggleGroupCallEnabledStartNotification#2a30c752 to nil")
	}

	return b.Obj(func(b tdjson.Decoder, key []byte) error {
		switch string(key) {
		case tdjson.TypeField:
			if err := b.ConsumeID("toggleGroupCallEnabledStartNotification"); err != nil {
				return fmt.Errorf("unable to decode toggleGroupCallEnabledStartNotification#2a30c752: %w", err)
			}
		case "group_call_id":
			value, err := b.Int32()
			if err != nil {
				return fmt.Errorf("unable to decode toggleGroupCallEnabledStartNotification#2a30c752: field group_call_id: %w", err)
			}
			t.GroupCallID = value
		case "enabled_start_notification":
			value, err := b.Bool()
			if err != nil {
				return fmt.Errorf("unable to decode toggleGroupCallEnabledStartNotification#2a30c752: field enabled_start_notification: %w", err)
			}
			t.EnabledStartNotification = value
		default:
			return b.Skip()
		}
		return nil
	})
}

// GetGroupCallID returns value of GroupCallID field.
func (t *ToggleGroupCallEnabledStartNotificationRequest) GetGroupCallID() (value int32) {
	if t == nil {
		return
	}
	return t.GroupCallID
}

// GetEnabledStartNotification returns value of EnabledStartNotification field.
func (t *ToggleGroupCallEnabledStartNotificationRequest) GetEnabledStartNotification() (value bool) {
	if t == nil {
		return
	}
	return t.EnabledStartNotification
}

// ToggleGroupCallEnabledStartNotification invokes method toggleGroupCallEnabledStartNotification#2a30c752 returning error if any.
func (c *Client) ToggleGroupCallEnabledStartNotification(ctx context.Context, request *ToggleGroupCallEnabledStartNotificationRequest) error {
	var ok Ok

	if err := c.rpc.Invoke(ctx, request, &ok); err != nil {
		return err
	}
	return nil
}
