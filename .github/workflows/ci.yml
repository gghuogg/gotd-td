name: ci

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        flags: [""]
        go:
          - "1.20"
          - "1.21"
        arch:
          - amd64
        runner:
          - ubuntu-latest
          - macos-latest
        include:
          - arch: 386
            go: "1.21"
            runner: ubuntu-latest

          - arch: amd64
            runner: windows-latest
            go: "1.21"
            flags: "-p=1"

          - arch: amd64
            go: "1.21"
            runner: ubuntu-latest
            flags: "-race"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: test-${{ runner.os }}-${{ matrix.arch }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            test-${{ runner.os }}-${{ matrix.arch }}-go-${{ matrix.go }}-

      - name: Run tests
        env:
          GOARCH: ${{ matrix.arch }}
          GOFLAGS: ${{ matrix.flags }}
        run: go test --timeout 5m ./...
